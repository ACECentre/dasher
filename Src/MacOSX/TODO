TODO

(MISSING - file handling)
- file encoding pref - is that needed on MacOSX, or something different?  see ProjectBuilder Format->File Encodings! for example
- timestamp files pref
- new/open/save/saveas

(MISSING)
- i18n
- help text
- about box
- keyboard control - pref is there, the actual kb handling (arrow keys) is not

(NICE TO HAVE)
- add pref to auto-read training file (and add text field to contain path of training file)
- remember divider position in defaults - is that what EDIT_HEIGHT is about?
- make an image with "paused" in it, display that when it is, yes, paused
- option to make window transparent?
- option to make window float over other windows?

(BUGS)
- getting Unhandled bool parameter: 12, value = 0 (stop when outside window, i think) - needs implementing
- really should save/restore the divider location -- HOW?
- should display displayName rather than fontName in font pref

(ANNOYANCE)
- .inl files are being put in the app under Resources because PB doesn't recognise .inl
- because the caches in DasherView are lazily initialised, there is a noticeable hesitancy in the first few seconds.  Could be fixed by having the caches initialised at startup and on font change.  Would require being able to get a list of all the font sizes and all the characters in the alphabet from the Core.
- suppose the timer is firing 20 times per second.  But the app is working slower than that, say 15 fps.  Well, the overall speed will be about 10-12 fps!  I think this is because of the overhead of all those extra timers.  Maybe the timer rate should be adjusted dynamically depending on the fps?  Would require being able to get the fps from the Core.  It doesn't really make sense to hard-code the timer firing rate in the app - it depends on how fast the machine is and how much other work it is doing.  I know Windows machines won't be doing much else, but Macs have a plethora of other, important work to be getting on with!

DONE

31-05-2003
- separated edit functionality into DasherEdit; new context, delete, flush, unflush should all work correctly now (i hope?)

30-05-2003
- in ZippyString, the image was over-retained
- strings of len > 1 are not cached nor have images created
- fixed bug where resizing blanked dasher view.  Too much flushing of rect and text caches.

26-05-2003
- masses of performance improvements.  Added ZippyCache.[hm] and ZippyString.[hm] and modified DasherView.  This is what has changed:
     * in the drawing callbacks (text, rectangle, polyline), drawing isn't actually done, data is just saved to be rendered later
     * characters are looked up in ZippyCache, if the character is not there, it is stored; and the character is rendered into an offscreen image; the image is what is rendered to the screen.
     * the dispolayCallback tells the view machinery to display the view; the drawRect: method goes through the above caches rendering the rects, texts and polylines
     * this reduces CPU consumption by from 30% - 50%; it seems to be able to render a steady 150 rects + 150 chars at 20 fps
     
30-04-2003
- expat now linked in explicitly rather than with -l, so users don't have to install expat separately
- now handles foreign alphabets correctly; uses stringWithUTF8String rather than stringWithCString in function NSStringFromStdString
- range of speed slider now 0 - 8 to match other implementations

29-04-2003
- editbox no longer crashes in unflush when the number of flushed characters is larger than the number of characters in the edit box.

28-04-2003
- added the parameter_xxx_callback functions; now works correctly if user hasn't any Dasher defaults.
- initialise dasher at the size of DasherView stored in the nib, NOT 10, 10.

26-4-2003
- edit font pref
- speed is correctly set on app startup
- dasher font & font size is selectable in prefs
- put dasher font on appearance; edit font on files, got rid of fonts tab in prefs
- add standard text menus & editing functions for use in edit box

25-4-2003 
- user can select alphabet in preferences
- sets system and user dirs, system dir is resourcePath inside the app; user dir is ~/.dasher/.
- displays the edit text rather than the display text in the edit box 
- kb control pref, but doesn't do anything (the pref is saved and restored correctly)
- app icon added (DasherApp.icns from Iain Murray)
- copy all on stop works
- other clipboard functions implemented, not tested
- dasher font size pref

